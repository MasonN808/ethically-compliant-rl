wandb: Currently logged in as: mason-nakamura1 (ecrl). Use `wandb login --relogin` to force relogin
wandb: Currently logged in as: mason-nakamura1 (ecrl). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.16.4 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.14.2
wandb: Run data is saved locally in /nas/ucb/mason/ethically-compliant-rl/wandb/run-20240321_155311-zupz4lcf
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run ancient-shape-1
wandb: ‚≠êÔ∏è View project at https://wandb.ai/ecrl/ppol-LIDAR-CNN
wandb: üöÄ View run at https://wandb.ai/ecrl/ppol-LIDAR-CNN/runs/zupz4lcf
wandb: wandb version 0.16.4 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.14.2
wandb: Run data is saved locally in /nas/ucb/mason/ethically-compliant-rl/wandb/run-20240321_155312-t2y5bvf2
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run smart-spaceship-2
wandb: ‚≠êÔ∏è View project at https://wandb.ai/ecrl/ppol-LIDAR-CNN
wandb: üöÄ View run at https://wandb.ai/ecrl/ppol-LIDAR-CNN/runs/t2y5bvf2
wandb: Currently logged in as: mason-nakamura1 (ecrl). Use `wandb login --relogin` to force relogin
wandb: Currently logged in as: mason-nakamura1 (ecrl). Use `wandb login --relogin` to force relogin
Traceback (most recent call last):
  File "/nas/ucb/mason/ethically-compliant-rl/tests/PPOL_New/train_ppol_lidar_cnn.py", line 206, in <module>
    train()
  File "/nas/ucb/mason/ethically-compliant-rl/.venv/lib/python3.9/site-packages/pyrallis/argparsing.py", line 158, in wrapper_inner
    response = fn(cfg, *args, **kwargs)
  File "/nas/ucb/mason/ethically-compliant-rl/tests/PPOL_New/train_ppol_lidar_cnn.py", line 180, in train
    agent = PPOL("MlpPolicy",
  File "/nas/ucb/mason/ethically-compliant-rl/stable_baselines3/stable_baselines3/ppol/ppol.py", line 192, in __init__
    self._setup_model()
  File "/nas/ucb/mason/ethically-compliant-rl/stable_baselines3/stable_baselines3/ppol/ppol.py", line 195, in _setup_model
    super()._setup_model()
  File "/nas/ucb/mason/ethically-compliant-rl/stable_baselines3/stable_baselines3/common/on_policy_algorithm.py", line 438, in _setup_model
    self.policy = self.policy_class(  # type: ignore[assignment]
  File "/nas/ucb/mason/ethically-compliant-rl/stable_baselines3/stable_baselines3/common/policies.py", line 1118, in __init__
    self._build(lr_schedule) # THIS IS IT
  File "/nas/ucb/mason/ethically-compliant-rl/stable_baselines3/stable_baselines3/common/policies.py", line 1216, in _build
    module.apply(partial(self.init_weights, gain=gain))
  File "/nas/ucb/mason/ethically-compliant-rl/pytorch/torch/nn/modules/module.py", line 890, in apply
    module.apply(fn)
  File "/nas/ucb/mason/ethically-compliant-rl/pytorch/torch/nn/modules/module.py", line 890, in apply
    module.apply(fn)
  File "/nas/ucb/mason/ethically-compliant-rl/pytorch/torch/nn/modules/module.py", line 891, in apply
    fn(self)
  File "/nas/ucb/mason/ethically-compliant-rl/stable_baselines3/stable_baselines3/common/policies.py", line 307, in init_weights
    nn.init.orthogonal_(module.weight, gain=gain)
  File "/nas/ucb/mason/ethically-compliant-rl/pytorch/torch/nn/init.py", line 543, in orthogonal_
    q, r = torch.linalg.qr(flattened)
RuntimeError: Calling torch.geqrf on a CPU tensor requires compiling PyTorch with LAPACK. Please use PyTorch built with LAPACK support.
wandb: Waiting for W&B process to finish... (failed 1). Press Control-C to abort syncing.
Traceback (most recent call last):
  File "/nas/ucb/mason/ethically-compliant-rl/tests/PPOL_New/train_ppol_lidar_cnn.py", line 206, in <module>
    train()
  File "/nas/ucb/mason/ethically-compliant-rl/.venv/lib/python3.9/site-packages/pyrallis/argparsing.py", line 158, in wrapper_inner
    response = fn(cfg, *args, **kwargs)
  File "/nas/ucb/mason/ethically-compliant-rl/tests/PPOL_New/train_ppol_lidar_cnn.py", line 180, in train
    agent = PPOL("MlpPolicy",
  File "/nas/ucb/mason/ethically-compliant-rl/stable_baselines3/stable_baselines3/ppol/ppol.py", line 192, in __init__
    self._setup_model()
  File "/nas/ucb/mason/ethically-compliant-rl/stable_baselines3/stable_baselines3/ppol/ppol.py", line 195, in _setup_model
    super()._setup_model()
  File "/nas/ucb/mason/ethically-compliant-rl/stable_baselines3/stable_baselines3/common/on_policy_algorithm.py", line 438, in _setup_model
    self.policy = self.policy_class(  # type: ignore[assignment]
  File "/nas/ucb/mason/ethically-compliant-rl/stable_baselines3/stable_baselines3/common/policies.py", line 1118, in __init__
    self._build(lr_schedule) # THIS IS IT
  File "/nas/ucb/mason/ethically-compliant-rl/stable_baselines3/stable_baselines3/common/policies.py", line 1216, in _build
    module.apply(partial(self.init_weights, gain=gain))
  File "/nas/ucb/mason/ethically-compliant-rl/pytorch/torch/nn/modules/module.py", line 890, in apply
    module.apply(fn)
  File "/nas/ucb/mason/ethically-compliant-rl/pytorch/torch/nn/modules/module.py", line 890, in apply
    module.apply(fn)
  File "/nas/ucb/mason/ethically-compliant-rl/pytorch/torch/nn/modules/module.py", line 891, in apply
    fn(self)
  File "/nas/ucb/mason/ethically-compliant-rl/stable_baselines3/stable_baselines3/common/policies.py", line 307, in init_weights
    nn.init.orthogonal_(module.weight, gain=gain)
  File "/nas/ucb/mason/ethically-compliant-rl/pytorch/torch/nn/init.py", line 543, in orthogonal_
    q, r = torch.linalg.qr(flattened)
RuntimeError: Calling torch.geqrf on a CPU tensor requires compiling PyTorch with LAPACK. Please use PyTorch built with LAPACK support.
wandb: Waiting for W&B process to finish... (failed 1). Press Control-C to abort syncing.
wandb: wandb version 0.16.4 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.14.2
wandb: Run data is saved locally in /nas/ucb/mason/ethically-compliant-rl/wandb/run-20240321_085312-77zy2npt
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run glad-bird-3
wandb: ‚≠êÔ∏è View project at https://wandb.ai/ecrl/ppol-LIDAR-CNN
wandb: üöÄ View run at https://wandb.ai/ecrl/ppol-LIDAR-CNN/runs/77zy2npt
wandb: wandb version 0.16.4 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.14.2
wandb: Run data is saved locally in /nas/ucb/mason/ethically-compliant-rl/wandb/run-20240321_085312-4ctzet6n
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run honest-planet-4
wandb: ‚≠êÔ∏è View project at https://wandb.ai/ecrl/ppol-LIDAR-CNN
wandb: üöÄ View run at https://wandb.ai/ecrl/ppol-LIDAR-CNN/runs/4ctzet6n
Traceback (most recent call last):
  File "/nas/ucb/mason/ethically-compliant-rl/tests/PPOL_New/train_ppol_lidar_cnn.py", line 206, in <module>
    train()
  File "/nas/ucb/mason/ethically-compliant-rl/.venv/lib/python3.9/site-packages/pyrallis/argparsing.py", line 158, in wrapper_inner
    response = fn(cfg, *args, **kwargs)
  File "/nas/ucb/mason/ethically-compliant-rl/tests/PPOL_New/train_ppol_lidar_cnn.py", line 180, in train
    agent = PPOL("MlpPolicy",
  File "/nas/ucb/mason/ethically-compliant-rl/stable_baselines3/stable_baselines3/ppol/ppol.py", line 192, in __init__
    self._setup_model()
  File "/nas/ucb/mason/ethically-compliant-rl/stable_baselines3/stable_baselines3/ppol/ppol.py", line 195, in _setup_model
    super()._setup_model()
  File "/nas/ucb/mason/ethically-compliant-rl/stable_baselines3/stable_baselines3/common/on_policy_algorithm.py", line 438, in _setup_model
    self.policy = self.policy_class(  # type: ignore[assignment]
  File "/nas/ucb/mason/ethically-compliant-rl/stable_baselines3/stable_baselines3/common/policies.py", line 1118, in __init__
    self._build(lr_schedule) # THIS IS IT
  File "/nas/ucb/mason/ethically-compliant-rl/stable_baselines3/stable_baselines3/common/policies.py", line 1216, in _build
    module.apply(partial(self.init_weights, gain=gain))
  File "/nas/ucb/mason/ethically-compliant-rl/pytorch/torch/nn/modules/module.py", line 890, in apply
    module.apply(fn)
  File "/nas/ucb/mason/ethically-compliant-rl/pytorch/torch/nn/modules/module.py", line 890, in apply
    module.apply(fn)
  File "/nas/ucb/mason/ethically-compliant-rl/pytorch/torch/nn/modules/module.py", line 891, in apply
    fn(self)
  File "/nas/ucb/mason/ethically-compliant-rl/stable_baselines3/stable_baselines3/common/policies.py", line 307, in init_weights
    nn.init.orthogonal_(module.weight, gain=gain)
  File "/nas/ucb/mason/ethically-compliant-rl/pytorch/torch/nn/init.py", line 543, in orthogonal_
    q, r = torch.linalg.qr(flattened)
RuntimeError: Calling torch.geqrf on a CPU tensor requires compiling PyTorch with LAPACK. Please use PyTorch built with LAPACK support.
wandb: Waiting for W&B process to finish... (failed 1). Press Control-C to abort syncing.
Traceback (most recent call last):
  File "/nas/ucb/mason/ethically-compliant-rl/tests/PPOL_New/train_ppol_lidar_cnn.py", line 206, in <module>
    train()
  File "/nas/ucb/mason/ethically-compliant-rl/.venv/lib/python3.9/site-packages/pyrallis/argparsing.py", line 158, in wrapper_inner
    response = fn(cfg, *args, **kwargs)
  File "/nas/ucb/mason/ethically-compliant-rl/tests/PPOL_New/train_ppol_lidar_cnn.py", line 180, in train
    agent = PPOL("MlpPolicy",
  File "/nas/ucb/mason/ethically-compliant-rl/stable_baselines3/stable_baselines3/ppol/ppol.py", line 192, in __init__
    self._setup_model()
  File "/nas/ucb/mason/ethically-compliant-rl/stable_baselines3/stable_baselines3/ppol/ppol.py", line 195, in _setup_model
    super()._setup_model()
  File "/nas/ucb/mason/ethically-compliant-rl/stable_baselines3/stable_baselines3/common/on_policy_algorithm.py", line 438, in _setup_model
    self.policy = self.policy_class(  # type: ignore[assignment]
  File "/nas/ucb/mason/ethically-compliant-rl/stable_baselines3/stable_baselines3/common/policies.py", line 1118, in __init__
    self._build(lr_schedule) # THIS IS IT
  File "/nas/ucb/mason/ethically-compliant-rl/stable_baselines3/stable_baselines3/common/policies.py", line 1216, in _build
    module.apply(partial(self.init_weights, gain=gain))
  File "/nas/ucb/mason/ethically-compliant-rl/pytorch/torch/nn/modules/module.py", line 890, in apply
    module.apply(fn)
  File "/nas/ucb/mason/ethically-compliant-rl/pytorch/torch/nn/modules/module.py", line 890, in apply
    module.apply(fn)
  File "/nas/ucb/mason/ethically-compliant-rl/pytorch/torch/nn/modules/module.py", line 891, in apply
    fn(self)
  File "/nas/ucb/mason/ethically-compliant-rl/stable_baselines3/stable_baselines3/common/policies.py", line 307, in init_weights
    nn.init.orthogonal_(module.weight, gain=gain)
  File "/nas/ucb/mason/ethically-compliant-rl/pytorch/torch/nn/init.py", line 543, in orthogonal_
    q, r = torch.linalg.qr(flattened)
RuntimeError: Calling torch.geqrf on a CPU tensor requires compiling PyTorch with LAPACK. Please use PyTorch built with LAPACK support.
wandb: Waiting for W&B process to finish... (failed 1). Press Control-C to abort syncing.
wandb: üöÄ View run ancient-shape-1 at: https://wandb.ai/ecrl/ppol-LIDAR-CNN/runs/zupz4lcf
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20240321_155311-zupz4lcf/logs
wandb: üöÄ View run smart-spaceship-2 at: https://wandb.ai/ecrl/ppol-LIDAR-CNN/runs/t2y5bvf2
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20240321_155312-t2y5bvf2/logs
wandb: üöÄ View run glad-bird-3 at: https://wandb.ai/ecrl/ppol-LIDAR-CNN/runs/77zy2npt
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20240321_085312-77zy2npt/logs
wandb: üöÄ View run honest-planet-4 at: https://wandb.ai/ecrl/ppol-LIDAR-CNN/runs/4ctzet6n
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20240321_085312-4ctzet6n/logs
srun: error: airl.ist.berkeley.edu: task 0: Exited with exit code 1
srun: error: cirl.ist.berkeley.edu: task 0: Exited with exit code 1
srun: error: dqn.ist.berkeley.edu: task 0: Exited with exit code 1
srun: error: ddpg.ist.berkeley.edu: task 0: Exited with exit code 1
