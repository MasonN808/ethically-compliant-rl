wandb: Currently logged in as: mason-nakamura1 (ecrl). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.15.8 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.14.2
wandb: Run data is saved locally in /nas/ucb/mason/ethically-compliant-rl/wandb/run-20230804_182227-51dec4ce-27ba-4ee2-a1a3-c9f871200937
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run cpo_batch_size50000_cost20_l2_reg0.01_step_per_epoch20000-801a
wandb: ‚≠êÔ∏è View project at https://wandb.ai/ecrl/fast-safe-rl
wandb: üöÄ View run at https://wandb.ai/ecrl/fast-safe-rl/runs/51dec4ce-27ba-4ee2-a1a3-c9f871200937
[32;1mLogging data to logs/fast-safe-rl/parking-v0-cost-20/cpo_batch_size50000_cost20_l2_reg0.01_step_per_epoch20000-801a/progress.txt[0m
[36;1mSaving config:
[0m
{
    "action_bound_method":	"clip",
    "action_scaling":	true,
    "backtrack_coeff":	0.8,
    "batch_size":	50000,
    "buffer_size":	100000,
    "cost_limit":	20,
    "damping_coeff":	0.1,
    "deterministic_eval":	true,
    "device":	"cuda",
    "env_config_file":	"configs/ParkingEnv/env-kinematicsGoal.txt",
    "episode_per_collect":	20,
    "epoch":	300,
    "gae_lambda":	0.95,
    "gamma":	0.99,
    "group":	null,
    "hidden_sizes":	[
        128,
        128
    ],
    "l2_reg":	0.01,
    "last_layer_scale":	false,
    "logdir":	"logs",
    "lr":	0.001,
    "max_backtracks":	100,
    "max_batchsize":	99999,
    "name":	"cpo_batch_size50000_cost20_l2_reg0.01_step_per_epoch20000-801a",
    "norm_adv":	true,
    "optim_critic_iters":	10,
    "prefix":	"cpo",
    "project":	"fast-safe-rl",
    "render":	null,
    "render_mode":	null,
    "repeat_per_collect":	4,
    "resume":	false,
    "rew_norm":	false,
    "reward_threshold":	10000,
    "save_ckpt":	true,
    "save_interval":	4,
    "seed":	10,
    "step_per_epoch":	20000,
    "suffix":	"",
    "target_kl":	0.01,
    "task":	"parking-v0",
    "testing_num":	2,
    "thread":	320,
    "training_num":	20,
    "unbounded":	false,
    "use_default_cfg":	false,
    "verbose":	true,
    "worker":	"ShmemVectorEnv"
}
Traceback (most recent call last):
  File "/nas/ucb/mason/ethically-compliant-rl/CPO/utils/utils.py", line 24, in load_environment
    env = gym.make(env_config['id'], render_mode=render_mode)
  File "/nas/ucb/mason/ethically-compliant-rl/.venv/lib/python3.9/site-packages/gymnasium/envs/registration.py", line 801, in make
    env = env_creator(**env_spec_kwargs)
  File "/nas/ucb/mason/ethically-compliant-rl/HighwayEnv/highway_env/envs/parking_env.py", line 75, in __init__
    super().__init__(config, render_mode)
  File "/nas/ucb/mason/ethically-compliant-rl/HighwayEnv/highway_env/envs/common/abstract.py", line 71, in __init__
    self.reset()
  File "/nas/ucb/mason/ethically-compliant-rl/HighwayEnv/highway_env/envs/common/abstract.py", line 205, in reset
    self._reset()
  File "/nas/ucb/mason/ethically-compliant-rl/HighwayEnv/highway_env/envs/parking_env.py", line 127, in _reset
    self._create_road()
  File "/nas/ucb/mason/ethically-compliant-rl/HighwayEnv/highway_env/envs/parking_env.py", line 142, in _create_road
    num_points = self.config["quantized_line_points"]
KeyError: 'quantized_line_points'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/nas/ucb/mason/ethically-compliant-rl/CPO/train_cpo_2.py", line 170, in <module>
    train()
  File "/nas/ucb/mason/ethically-compliant-rl/.venv/lib/python3.9/site-packages/pyrallis/argparsing.py", line 158, in wrapper_inner
    response = fn(cfg, *args, **kwargs)
  File "/nas/ucb/mason/ethically-compliant-rl/CPO/train_cpo_2.py", line 99, in train
    demo_env = load_environment(ENV_CONFIG)
  File "/nas/ucb/mason/ethically-compliant-rl/CPO/utils/utils.py", line 28, in load_environment
    raise ValueError("The gym register id of the environment must be provided")
ValueError: The gym register id of the environment must be provided
Traceback (most recent call last):
  File "/nas/ucb/mason/ethically-compliant-rl/CPO/utils/utils.py", line 24, in load_environment
    env = gym.make(env_config['id'], render_mode=render_mode)
  File "/nas/ucb/mason/ethically-compliant-rl/.venv/lib/python3.9/site-packages/gymnasium/envs/registration.py", line 801, in make
    env = env_creator(**env_spec_kwargs)
  File "/nas/ucb/mason/ethically-compliant-rl/HighwayEnv/highway_env/envs/parking_env.py", line 75, in __init__
    super().__init__(config, render_mode)
  File "/nas/ucb/mason/ethically-compliant-rl/HighwayEnv/highway_env/envs/common/abstract.py", line 71, in __init__
    self.reset()
  File "/nas/ucb/mason/ethically-compliant-rl/HighwayEnv/highway_env/envs/common/abstract.py", line 205, in reset
    self._reset()
  File "/nas/ucb/mason/ethically-compliant-rl/HighwayEnv/highway_env/envs/parking_env.py", line 127, in _reset
    self._create_road()
  File "/nas/ucb/mason/ethically-compliant-rl/HighwayEnv/highway_env/envs/parking_env.py", line 142, in _create_road
    num_points = self.config["quantized_line_points"]
KeyError: 'quantized_line_points'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/nas/ucb/mason/ethically-compliant-rl/CPO/train_cpo_2.py", line 170, in <module>
    train()
  File "/nas/ucb/mason/ethically-compliant-rl/.venv/lib/python3.9/site-packages/pyrallis/argparsing.py", line 158, in wrapper_inner
    response = fn(cfg, *args, **kwargs)
  File "/nas/ucb/mason/ethically-compliant-rl/CPO/train_cpo_2.py", line 99, in train
    demo_env = load_environment(ENV_CONFIG)
  File "/nas/ucb/mason/ethically-compliant-rl/CPO/utils/utils.py", line 28, in load_environment
    raise ValueError("The gym register id of the environment must be provided")
ValueError: The gym register id of the environment must be provided
wandb: Waiting for W&B process to finish... (failed 1). Press Control-C to abort syncing.
wandb: üöÄ View run cpo_batch_size50000_cost20_l2_reg0.01_step_per_epoch20000-801a at: https://wandb.ai/ecrl/fast-safe-rl/runs/51dec4ce-27ba-4ee2-a1a3-c9f871200937
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20230804_182227-51dec4ce-27ba-4ee2-a1a3-c9f871200937/logs
srun: error: ddpg.ist.berkeley.edu: task 0: Exited with exit code 1
srun: Job 33367 step creation temporarily disabled, retrying (Requested nodes are busy)
srun: Step created for StepId=33367.1
wandb: Currently logged in as: mason-nakamura1 (ecrl). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.15.8 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.14.2
wandb: Run data is saved locally in /nas/ucb/mason/ethically-compliant-rl/wandb/run-20230804_182435-28fa6313-d9f1-4759-aaec-bf05ba9038b0
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run cpo_batch_size50000_cost30_l2_reg0.01_step_per_epoch20000-7040
wandb: ‚≠êÔ∏è View project at https://wandb.ai/ecrl/fast-safe-rl
wandb: üöÄ View run at https://wandb.ai/ecrl/fast-safe-rl/runs/28fa6313-d9f1-4759-aaec-bf05ba9038b0
[32;1mLogging data to logs/fast-safe-rl/parking-v0-cost-30/cpo_batch_size50000_cost30_l2_reg0.01_step_per_epoch20000-7040/progress.txt[0m
[36;1mSaving config:
[0m
{
    "action_bound_method":	"clip",
    "action_scaling":	true,
    "backtrack_coeff":	0.8,
    "batch_size":	50000,
    "buffer_size":	100000,
    "cost_limit":	30,
    "damping_coeff":	0.1,
    "deterministic_eval":	true,
    "device":	"cuda",
    "env_config_file":	"configs/ParkingEnv/env-kinematicsGoal.txt",
    "episode_per_collect":	20,
    "epoch":	300,
    "gae_lambda":	0.95,
    "gamma":	0.99,
    "group":	null,
    "hidden_sizes":	[
        128,
        128
    ],
    "l2_reg":	0.01,
    "last_layer_scale":	false,
    "logdir":	"logs",
    "lr":	0.001,
    "max_backtracks":	100,
    "max_batchsize":	99999,
    "name":	"cpo_batch_size50000_cost30_l2_reg0.01_step_per_epoch20000-7040",
    "norm_adv":	true,
    "optim_critic_iters":	10,
    "prefix":	"cpo",
    "project":	"fast-safe-rl",
    "render":	null,
    "render_mode":	null,
    "repeat_per_collect":	4,
    "resume":	false,
    "rew_norm":	false,
    "reward_threshold":	10000,
    "save_ckpt":	true,
    "save_interval":	4,
    "seed":	10,
    "step_per_epoch":	20000,
    "suffix":	"",
    "target_kl":	0.01,
    "task":	"parking-v0",
    "testing_num":	2,
    "thread":	320,
    "training_num":	20,
    "unbounded":	false,
    "use_default_cfg":	false,
    "verbose":	true,
    "worker":	"ShmemVectorEnv"
}
Traceback (most recent call last):
  File "/nas/ucb/mason/ethically-compliant-rl/CPO/utils/utils.py", line 24, in load_environment
    env = gym.make(env_config['id'], render_mode=render_mode)
  File "/nas/ucb/mason/ethically-compliant-rl/.venv/lib/python3.9/site-packages/gymnasium/envs/registration.py", line 801, in make
    env = env_creator(**env_spec_kwargs)
  File "/nas/ucb/mason/ethically-compliant-rl/HighwayEnv/highway_env/envs/parking_env.py", line 75, in __init__
    super().__init__(config, render_mode)
  File "/nas/ucb/mason/ethically-compliant-rl/HighwayEnv/highway_env/envs/common/abstract.py", line 71, in __init__
    self.reset()
  File "/nas/ucb/mason/ethically-compliant-rl/HighwayEnv/highway_env/envs/common/abstract.py", line 205, in reset
    self._reset()
  File "/nas/ucb/mason/ethically-compliant-rl/HighwayEnv/highway_env/envs/parking_env.py", line 127, in _reset
    self._create_road()
  File "/nas/ucb/mason/ethically-compliant-rl/HighwayEnv/highway_env/envs/parking_env.py", line 142, in _create_road
    num_points = self.config["quantized_line_points"]
KeyError: 'quantized_line_points'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/nas/ucb/mason/ethically-compliant-rl/CPO/train_cpo_1.py", line 167, in <module>
    train()
  File "/nas/ucb/mason/ethically-compliant-rl/.venv/lib/python3.9/site-packages/pyrallis/argparsing.py", line 158, in wrapper_inner
    response = fn(cfg, *args, **kwargs)
  File "/nas/ucb/mason/ethically-compliant-rl/CPO/train_cpo_1.py", line 99, in train
    demo_env = load_environment(ENV_CONFIG)
  File "/nas/ucb/mason/ethically-compliant-rl/CPO/utils/utils.py", line 28, in load_environment
    raise ValueError("The gym register id of the environment must be provided")
ValueError: The gym register id of the environment must be provided
Traceback (most recent call last):
  File "/nas/ucb/mason/ethically-compliant-rl/CPO/utils/utils.py", line 24, in load_environment
    env = gym.make(env_config['id'], render_mode=render_mode)
  File "/nas/ucb/mason/ethically-compliant-rl/.venv/lib/python3.9/site-packages/gymnasium/envs/registration.py", line 801, in make
    env = env_creator(**env_spec_kwargs)
  File "/nas/ucb/mason/ethically-compliant-rl/HighwayEnv/highway_env/envs/parking_env.py", line 75, in __init__
    super().__init__(config, render_mode)
  File "/nas/ucb/mason/ethically-compliant-rl/HighwayEnv/highway_env/envs/common/abstract.py", line 71, in __init__
    self.reset()
  File "/nas/ucb/mason/ethically-compliant-rl/HighwayEnv/highway_env/envs/common/abstract.py", line 205, in reset
    self._reset()
  File "/nas/ucb/mason/ethically-compliant-rl/HighwayEnv/highway_env/envs/parking_env.py", line 127, in _reset
    self._create_road()
  File "/nas/ucb/mason/ethically-compliant-rl/HighwayEnv/highway_env/envs/parking_env.py", line 142, in _create_road
    num_points = self.config["quantized_line_points"]
KeyError: 'quantized_line_points'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/nas/ucb/mason/ethically-compliant-rl/CPO/train_cpo_1.py", line 167, in <module>
    train()
  File "/nas/ucb/mason/ethically-compliant-rl/.venv/lib/python3.9/site-packages/pyrallis/argparsing.py", line 158, in wrapper_inner
    response = fn(cfg, *args, **kwargs)
  File "/nas/ucb/mason/ethically-compliant-rl/CPO/train_cpo_1.py", line 99, in train
    demo_env = load_environment(ENV_CONFIG)
  File "/nas/ucb/mason/ethically-compliant-rl/CPO/utils/utils.py", line 28, in load_environment
    raise ValueError("The gym register id of the environment must be provided")
ValueError: The gym register id of the environment must be provided
wandb: Waiting for W&B process to finish... (failed 1). Press Control-C to abort syncing.
wandb: üöÄ View run cpo_batch_size50000_cost30_l2_reg0.01_step_per_epoch20000-7040 at: https://wandb.ai/ecrl/fast-safe-rl/runs/28fa6313-d9f1-4759-aaec-bf05ba9038b0
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20230804_182435-28fa6313-d9f1-4759-aaec-bf05ba9038b0/logs
srun: error: ddpg.ist.berkeley.edu: task 0: Exited with exit code 1
